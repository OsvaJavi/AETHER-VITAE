"""
Script para generar embeddings de las publicaciones de la NASA
EJECUTAR UNA SOLA VEZ antes de lanzar la aplicaci√≥n

Uso: python create_embeddings.py
"""

import pandas as pd
import numpy as np
from sentence_transformers import SentenceTransformer
from tqdm import tqdm
import os

def create_embeddings():
    print("\n" + "="*60)
    print("üöÄ GENERADOR DE EMBEDDINGS - NASA SPACE BIOLOGY")
    print("="*60 + "\n")
    
    # 1. Verificar que existe la carpeta data
    if not os.path.exists('data'):
        print("‚ùå Error: No existe la carpeta 'data'")
        print("   Crea la carpeta: mkdir data")
        return
    
    # 2. Cargar datos
    print("üìÇ Paso 1/4: Cargando publicaciones...")
    try:
        df = pd.read_csv('data/publicaciones.csv')
        print(f"   ‚úÖ {len(df)} publicaciones cargadas")
    except FileNotFoundError:
        print("   ‚ùå Error: No se encontr√≥ data/publicaciones.csv")
        print("   Aseg√∫rate de tener el archivo con las columnas:")
        print("   - id, title, authors, year, abstract_text, source_url")
        return
    except Exception as e:
        print(f"   ‚ùå Error al cargar datos: {str(e)}")
        return
    
    # Verificar columnas requeridas
    required_cols = ['title', 'abstract_text']
    missing_cols = [col for col in required_cols if col not in df.columns]
    if missing_cols:
        print(f"   ‚ùå Faltan columnas requeridas: {missing_cols}")
        return
    
    # 3. Cargar modelo de embeddings
    print("\nü§ñ Paso 2/4: Cargando modelo de embeddings...")
    print("   (Esto puede tardar en la primera ejecuci√≥n)")
    try:
        model = SentenceTransformer('all-MiniLM-L6-v2')
        print("   ‚úÖ Modelo cargado correctamente")
    except Exception as e:
        print(f"   ‚ùå Error al cargar modelo: {str(e)}")
        return
    
    # 4. Preparar textos
    print("\nüìù Paso 3/4: Preparando textos...")
    texts = []
    for idx, row in df.iterrows():
        # Combinar t√≠tulo y abstract para mejor contexto
        title = str(row['title']) if pd.notna(row['title']) else ""
        abstract = str(row['abstract_text']) if pd.notna(row['abstract_text']) else ""
        
        # Si no hay abstract, usar solo t√≠tulo
        if abstract:
            text = f"{title}. {abstract}"
        else:
            text = title
        
        texts.append(text)
    
    print(f"   ‚úÖ {len(texts)} textos preparados")
    
    # 5. Generar embeddings
    print("\n‚ö° Paso 4/4: Generando embeddings...")
    print("   (Esto puede tardar varios minutos dependiendo del tama√±o)")
    
    try:
        embeddings = model.encode(
            texts,
            batch_size=32,
            show_progress_bar=True,
            convert_to_tensor=False,
            normalize_embeddings=True  # Normalizar para similitud coseno
        )
        print(f"   ‚úÖ Embeddings generados")
    except Exception as e:
        print(f"   ‚ùå Error al generar embeddings: {str(e)}")
        return
    
    # 6. Guardar embeddings
    print("\nüíæ Guardando embeddings...")
    try:
        output_path = 'data/corpus_embeddings.npy'
        np.save(output_path, embeddings)
        
        # Verificar que se guard√≥ correctamente
        test_load = np.load(output_path)
        
        file_size_mb = os.path.getsize(output_path) / (1024 * 1024)
        
        print(f"   ‚úÖ Embeddings guardados en: {output_path}")
        
    except Exception as e:
        print(f"   ‚ùå Error al guardar: {str(e)}")
        return
    
    # 7. Resumen final
    print("\n" + "="*60)
    print("‚úÖ PROCESO COMPLETADO EXITOSAMENTE")
    print("="*60)
    print(f"""
üìä ESTAD√çSTICAS FINALES:
   
   ‚Ä¢ Total de documentos:        {len(embeddings):,}
   ‚Ä¢ Dimensi√≥n de embeddings:    {embeddings.shape[1]}D
   ‚Ä¢ Tama√±o del archivo:         {file_size_mb:.2f} MB
   ‚Ä¢ Archivo generado:           {output_path}
   
üöÄ SIGUIENTE PASO:
   
   Ejecuta la aplicaci√≥n con:
   streamlit run app.py
   
üí° NOTA: No necesitas ejecutar este script de nuevo a menos que:
   - Agregues nuevas publicaciones
   - Cambies el modelo de embeddings
   - Los datos originales cambien
    """)

if __name__ == "__main__":
    create_embeddings()